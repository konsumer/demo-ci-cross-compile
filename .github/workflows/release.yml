# this will build for window/linux on x86_64 and linux on arm64/arm7 and mac universal (x86_64/arm64)
# "Archive artifacts" is optional, and is just to show build-output before release is made

name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  publish:
    runs-on: ubuntu-latest
    needs: [windows, mac, linux]
    steps:
      - name: zip windows
        run: |
          cd build-windows-x86_64
          zip ../my_raylib_game-windows.zip my_raylib_game.exe
      - name: zip mac
        run: |
          cd build-mac-universal
          zip ../my_raylib_game-mac.zip my_raylib_game
      - name: zip linux-x86_64
        run: |
          cd build-linux-x86_64
          zip ../my_raylib_game-linux-x86_64.zip my_raylib_game
      - name: zip linux-arm64
        run: |
          cd build-linux-arm64
          zip ../my_raylib_game-linux-arm64.zip my_raylib_game
      - name: zip linux-arm7
        run: |
          cd build-linux-arm7
          zip ../my_raylib_game-linux-arm7.zip my_raylib_game
      - name: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            my_raylib_game-windows.zip
            my_raylib_game-mac.zip
            my_raylib_game-linux-x86_64.zip
            my_raylib_game-linux-arm64.zip
            my_raylib_game-linux-arm7.zip
  
  windows:
    runs-on: windows-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # - name: Cache Cmake
      #   uses: actions/cache@v3
      #   with:
      #     path: build-windows-x86_64/
      #     key: windows-x86_64-cmake
      - name: windows x86_64
        run: |
          mkdir -p build-windows-x86_64
          cd build-windows-x86_64
          cmake .. -G "MinGW Makefiles"
          make
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-windows
          path: build-windows-x86_64/my_raylib_game.exe

  mac:
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # - name: Cache Cmake
      #   uses: actions/cache@v3
      #   with:
      #     path: build-mac-universal/
      #     key: mac-cmake
      - name: mac universal
        run: |
          mkdir -p build-mac-universal
          cd build-mac-universal/
          cmake ..
          make
        env:
          CMAKE_OSX_ARCHITECTURES: "arm64;x86_64"
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-mac
          path: build-mac-universal/my_raylib_game
      
  linux:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # - name: Cache Cmake (x86_64)
      #   uses: actions/cache@v3
      #   with:
      #     path: build-linux-x86_64/
      #     key: linux-x86_64-cmake
      # - name: Cache Cmake (arm64)
      #   uses: actions/cache@v3
      #   with:
      #     path: build-linux-arm64/
      #     key: linux-arm64-cmake
      # - name: Cache Cmake (arm7)
      #   uses: actions/cache@v3
      #   with:
      #     path: build-linux-arm7/
      #     key: linux-arm7-cmake
      - name: setup
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu qemu-system-misc qemu-user-static qemu-user binfmt-support
      - name: linux x86_64
        run: |
          sudo apt-get install -y xorg-dev libglu1-mesa-dev
          mkdir -p build-linux-x86_64
          cd build-linux-x86_64/
          cmake ..
          make
      - name: linux arm64
        uses: addnab/docker-run-action@v3
        with:
          image: konsumer/node-raylib-builder:latest
          options: -v ${{ github.workspace }}:/workdir --platform linux/arm64 -e PLATFORM=PLATFORM_DRM
          run: |
            mkdir -p build-linux-arm64
            cd build-linux-arm64/
            cmake ..
            make
      - name: linux arm7
        uses: addnab/docker-run-action@v3
        with:
          image: konsumer/node-raylib-builder:latest
          options: -v ${{ github.workspace }}:/workdir --platform linux/arm/v7 -e PLATFORM=PLATFORM_DRM
          run: |
            mkdir -p build-linux-arm7
            cd build-linux-arm7/
            cmake ..
            make
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-linux
          path: build-linux-*/my_raylib_game
  

